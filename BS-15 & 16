//  Find the Odd Occurring Element in an Array in Logarithmic Time 

#include <stdio.h>

int find_odd_occurrence(int arr[], int n) {
    int result = 0;

    for (int i = 0; i < n; i++) {
        result ^= arr[i];
    }
    return result;
}
int main() {
    int arr[] = {1, 2, 3, 2, 3, 1, 3};
    int n = sizeof(arr) / sizeof(arr[0]);

    int odd_element = find_odd_occurrence(arr, n);
    printf("The odd occurring element is: %d\n", odd_element);

    return 0;
}

// Find Pairs with Difference 'k' in an Array (Constant Space Solution) 

#include <stdio.h>
#include <stdlib.h>

int compare(const void *a, const void *b) {
    return (*(int *)a - *(int *)b);
}

void find_pairs_with_difference(int arr[], int n, int k) {
    qsort(arr, n, sizeof(int), compare); 
    int i = 0, j = 1; 

    while (j < n) {
        int diff = arr[j] - arr[i];

        if (diff == k) {
            printf("Pair: (%d, %d)\n", arr[i], arr[j]);
            i++;
            j++;
        } else if (diff < k) {
            j++; 
        } else {
            i++; 
        }

        if (i == j) {
            j++;
        }
    }
}
int main() {
    int arr[] = {1, 5, 3, 4, 2};
    int n = sizeof(arr) / sizeof(arr[0]);
    int k = 2;

    printf("Pairs with difference %d:\n", k);
    find_pairs_with_difference(arr, n, k);

    return 0;
}
