// Find the Missing Term in a Sequence in Logarithmic Time 

#include <stdio.h>

int findMissingNumber(int arr[], int n) {
    int low = 0, high = n - 1, diff = arr[1] - arr[0];

    while (low <= high) {
        int mid = low + (high - low) / 2;

        if (arr[mid] - arr[mid - 1] != diff) {
            return arr[mid - 1] + diff;
        } else if (mid + 1 < n && arr[mid + 1] - arr[mid] != diff) {
            return arr[mid] + diff;
        } else if (arr[mid] - arr[mid - 1] == diff) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }

    return -1; // If no missing number is found
}

int main() {
    int arr[] = {1, 2, 3, 5, 6, 7, 8, 9};
    int n = sizeof(arr) / sizeof(arr[0]);
    int missing = findMissingNumber(arr, n);

    if (missing != -1) {
        printf("The missing number is %d\n", missing);
    } else {
        printf("No missing number found\n");
    }

    return 0;
}
